dir_in: data/simdata/ # input directory
dir_out: vignette/simdata_multiplex_output # output directory
dir_tmp: vignette/simdata_multiplex_tmp # tmp directory for intermediate files
dir_logs: vignette/simdata_multiplex_logs # log files directory
cmd_file: run_riboviz_simdata_multiplex.sh # File to log bash commands
rRNA_fasta: vignette/input/yeast_rRNA_R64-1-1.fa # rRNA file to avoid aligning to
orf_fasta: vignette/input/yeast_YAL_CDS_w_250utrs.fa # orf file to align to
orf_gff_file: vignette/input/yeast_YAL_CDS_w_250utrs.gff3 # GFF2/GFF3 file for ORFs
aligner: hisat2 # short read aligner to use. Currently only hisat2 works
build_indices: TRUE # build indices for aligner? if TRUE, remake indices from fasta files
make_bedgraph: TRUE # output bedgraph.gzs of data, in addition to h5?
dir_index: vignette/index # directory to put built indices in
rRNA_index: yeast_rRNA # rRNA index file prefix, relative to dir_index
orf_index: YAL_CDS_w_250 # ORF index file prefix, relative to dir_index
multiplex_fq_files:
- multiplex_umi_barcode_adaptor.fastq
sample_sheet: multiplex_barcodes.tsv # Sample sheet, tab-separated values file with, at least, SampleID and TagRead (barcode) columns
adapters: CTGTAGGCACC # Illumina sequencing adapter(s) to remove
extract_umis: TRUE # Extract UMIs if TRUE
dedup_umis: TRUE # Extract UMIs and deduplicate reads if TRUE
group_umis: TRUE # Summarise UMI groups before and after deduplication, if TRUE
umi_regexp: ^(?P<umi_1>.{4}).+(?P<umi_2>.{4})(?P<cell_1>.{3})$ # UMI-tools-compliant regular expression to extract UMIs and barcodes
nprocesses: 1 # number of processes to parallelize over
MinReadLen: 10 # Minimum read length in H5 output
MaxReadLen: 50 # Maximum read length in H5 output
Buffer: 250 # Length of flanking region around the CDS
PrimaryID: Name # Primary gene IDs to access the data (YAL001C, YAL003W, etc.)
SecondID: NULL # Secondary gene IDs to access the data (COX1, EFB1, etc.)
dataset: simdata_multiplex # Name of the dataset
StopInCDS: FALSE # Are stop codons part of the CDS annotations in GFF?
isTestRun: FALSE # Is this a test run
rpf: TRUE # Is the dataset an RPF or mRNA dataset?
ribovizGFF: TRUE # Does the GFF file contain 3 elements per gene - UTR5, CDS, and UTR3
features_file: data/yeast_features.tsv # file of features to correlate with ORFs
do_pos_sp_nt_freq: TRUE # Do calculate position-specific nucleotide freqeuency
t_rna: data/yeast_tRNAs.tsv # tRNA estimates
codon_pos: data/yeast_codon_pos_i200.RData # Codon positions in each gene
count_threshold: 1 # Remove genes with a read count below this threshold, when generating statistics and figures
asite_disp_length_file: data/yeast_standard_asite_disp_length.txt # table of fixed A-site positions by read length
